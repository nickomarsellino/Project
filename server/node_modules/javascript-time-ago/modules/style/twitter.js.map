{"version":3,"sources":["../../source/style/twitter.js"],"names":["formatters","gradation","threshold","format","value","locale","this_year","Intl","DateTimeFormat","month","day","now","next_year","Date","getFullYear","getTime","other","year","flavour"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;AACA;AACA,IAAMA,aAAa,EAAnB;;AAEA;AACA;AACA;AACA;kBAEA;AACC;AACA;AACAC,YACA;AACC;AADD,cAGK,8CAAmB,QAAnB,CAHL;AAIEC,aAAW;AAJb;AAMC;AACA,+CAAmB,MAAnB,CAPD;AAQC;AACA;AACA;AACCA,aAAW,iBAAM,qBADlB;AAECC,QAFD,kBAEQC,KAFR,EAEeC,MAFf,EAGC;AACC;AACA;AACA;AACA;AACA;AACA,OAAI,CAAC,0CAAL,EACA;AACC;AACA;;AAED;AACA,OAAI,CAACL,WAAWK,MAAX,CAAL,EACA;AACCL,eAAWK,MAAX,IAAqB,EAArB;AACA;;AAED;AACA,OAAI,CAACL,WAAWK,MAAX,EAAmBC,SAAxB,EACA;AACC;AACAN,eAAWK,MAAX,EAAmBC,SAAnB,GAA+B,IAAIC,KAAKC,cAAT,CAAwBH,MAAxB,EAC/B;AACCI,YAAQ,OADT;AAECC,UAAQ;AAFT,KAD+B,CAA/B;AAKA;;AAED;AACA,UAAOV,WAAWK,MAAX,EAAmBC,SAAnB,CAA6BH,MAA7B,CAAoC,wBAAQC,KAAR,CAApC,CAAP;AACA;AAjCF,EAVD;AA6CC;AACA;AACA;AACCF,WADD,qBACWS,GADX,EAEC;AACC;AACA,OAAMC,YAAY,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAASF,GAAT,EAAcG,WAAd,KAA8B,CAAvC,EAA0C,CAA1C,CAAlB;AACA,UAAO,CAACF,UAAUG,OAAV,KAAsBJ,GAAvB,IAA8B,IAArC;AACA,GANF;AAOCR,QAPD,kBAOQC,KAPR,EAOeC,MAPf,EAQC;AACC;AACA;AACA;AACA;AACA;AACA,OAAI,CAAC,0CAAL,EACA;AACC;AACA;;AAED;AACA,OAAI,CAACL,WAAWK,MAAX,CAAL,EACA;AACCL,eAAWK,MAAX,IAAqB,EAArB;AACA;;AAED;AACA,OAAI,CAACL,WAAWK,MAAX,EAAmBW,KAAxB,EACA;AACC;AACAhB,eAAWK,MAAX,EAAmBW,KAAnB,GAA2B,IAAIT,KAAKC,cAAT,CAAwBH,MAAxB,EAC3B;AACCY,WAAQ,SADT;AAECR,YAAQ,OAFT;AAGCC,UAAQ;AAHT,KAD2B,CAA3B;AAMA;;AAED;AACA,UAAOV,WAAWK,MAAX,EAAmBW,KAAnB,CAAyBb,MAAzB,CAAgC,wBAAQC,KAAR,CAAhC,CAAP;AACA;AAvCF,EA/CD,CAJD;;AA8FCc,UAAS,CAAC,MAAD,EAAS,YAAT,EAAuB,QAAvB,EAAiC,OAAjC;AA9FV,C","file":"twitter.js","sourcesContent":["import { canonical, day, hour, getStep, getDate } from '../gradation'\r\nimport { intlDateTimeFormatSupported } from '../locale'\r\n\r\n// A cache for `Intl.DateTimeFormat` twitter formatters\r\n// for various locales (is a global variable).\r\nconst formatters = {}\r\n\r\n// Twitter style relative time formatting.\r\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\r\n// Seconds, minutes and hours are shown relatively,\r\n// and other intervals can be shown using full date format.\r\nexport default\r\n{\r\n\t// Twitter gradation is derived from \"canonical\" gradation\r\n\t// adjusting its \"minute\" `threshold` to be 45.\r\n\tgradation:\r\n\t[\r\n\t\t// Minutes\r\n\t\t{\r\n\t\t\t...getStep(canonical, 'minute'),\r\n\t\t\tthreshold: 45\r\n\t\t},\r\n\t\t// Hours\r\n\t\tgetStep(canonical, 'hour'),\r\n\t\t// If `date` and `now` happened the same year,\r\n\t\t// then only output month and day.\r\n\t\t{\r\n\t\t\tthreshold: day - 0.5 * hour,\r\n\t\t\tformat(value, locale)\r\n\t\t\t{\r\n\t\t\t\t// Whether can use `Intl.DateTimeFormat`.\r\n\t\t\t\t// If `Intl` is not available,\r\n\t\t\t\t// or the locale is not supported,\r\n\t\t\t\t// then don't override the default labels.\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!intlDateTimeFormatSupported())\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale])\r\n\t\t\t\t{\r\n\t\t\t\t\tformatters[locale] = {}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale].this_year)\r\n\t\t\t\t{\r\n\t\t\t\t\t// \"Apr 11\" (MMMd)\r\n\t\t\t\t\tformatters[locale].this_year = new Intl.DateTimeFormat(locale,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmonth : 'short',\r\n\t\t\t\t\t\tday   : 'numeric'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Output month and day.\r\n\t\t\t\treturn formatters[locale].this_year.format(getDate(value))\r\n\t\t\t}\r\n\t\t},\r\n\t\t// If `date` and `now` happened in defferent years,\r\n\t\t// then output day, month and year.\r\n\t\t{\r\n\t\t\tthreshold(now)\r\n\t\t\t{\r\n\t\t\t\t// Jan 1st of the next year.\r\n\t\t\t\tconst next_year = new Date(new Date(now).getFullYear() + 1, 0)\r\n\t\t\t\treturn (next_year.getTime() - now) / 1000\r\n\t\t\t},\r\n\t\t\tformat(value, locale)\r\n\t\t\t{\r\n\t\t\t\t// Whether can use `Intl.DateTimeFormat`.\r\n\t\t\t\t// If `Intl` is not available,\r\n\t\t\t\t// or the locale is not supported,\r\n\t\t\t\t// then don't override the default labels.\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!intlDateTimeFormatSupported())\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!formatters[locale])\r\n\t\t\t\t{\r\n\t\t\t\t\tformatters[locale] = {}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale].other)\r\n\t\t\t\t{\r\n\t\t\t\t\t// \"Apr 11, 2017\" (yMMMd)\r\n\t\t\t\t\tformatters[locale].other = new Intl.DateTimeFormat(locale,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tyear  : 'numeric',\r\n\t\t\t\t\t\tmonth : 'short',\r\n\t\t\t\t\t\tday   : 'numeric'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Output day, month and year.\r\n\t\t\t\treturn formatters[locale].other.format(getDate(value))\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tflavour: ['tiny', 'short_time', 'narrow', 'short']\r\n}\r\n"]}